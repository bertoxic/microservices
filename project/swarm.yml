version: '3'


volumes:
  postgres-data:
  mongo-data:
  caddy_data:
    external: true
  caddy_config: 


services:
  caddy:
    image: bertoxics/micro-caddy:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"  
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  front-end:
    image: bertoxics/front-end:1.0.8
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"


  broker:
    image: bertoxics/broker:1.0.3
    # ports:
    #   - "8080:80"
    deploy:
      mode: replicated
      replicas: 1



  listener-service:
    image: bertoxics/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: bertoxics/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=bert dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: bertoxics/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: bertoxics/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      FROM_NAME: "bertoxic"
      FROM_ADDRESS: albert@admin.com
    

  rabbitmq:
    image : "rabbitmq:3.12-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: global  

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo: 
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-data:/data/db
      # - /db-data/mongo/:/data/db


  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    #user: "${UID}:${GID}"
    # user: "4C4C4544-0050-5410-8036-B4C04F444332:7ba1006a-9e7f-46b2-b075-0659f8ce1afa"
    # user: root
    # user: 4C4C4544-0050-5410-8036-B4C04F444332:7ba1006a-9e7f-46b2-b075-0659f8ce1afa
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bert
      POSTGRES_DB: users
      # POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres-data:/var/lib/postgresql/data/



#  docker swarm join --token SWMTKN-1-1iw1vy77eaymlor2kvt014mllxet2qfdss1mo4keyoo2n4mxiw-5z0y4k8din3s7fnrta5ob3hu4 192.168.65.3:2377

#To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.